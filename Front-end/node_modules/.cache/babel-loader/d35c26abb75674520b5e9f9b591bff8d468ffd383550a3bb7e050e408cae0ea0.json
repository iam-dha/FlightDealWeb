{"ast":null,"code":"import axios from \"axios\";\n\n// Cấu hình base URL cho toàn bộ request\nconst api = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  // Đổi lại nếu bạn deploy ở server khác\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;\n/*\r\nconst mockUsers = [\r\n  { _id: \"1\", name: \"Nguyễn Văn A\", email: \"a@example.com\" },\r\n  { _id: \"2\", name: \"Trần Thị B\", email: \"b@example.com\" },\r\n  { _id: \"3\", name: \"Lê Văn C\", email: \"c@example.com\" },\r\n];\r\nconst mockOrders = [\r\n  {\r\n    _id: \"101\",\r\n    userId: \"1\",\r\n    total: 500000,\r\n    status: \"Completed\",\r\n    date: \"2025-04-01\",\r\n  },\r\n  {\r\n    _id: \"102\",\r\n    userId: \"2\",\r\n    total: 300000,\r\n    status: \"Pending\",\r\n    date: \"2025-04-02\",\r\n  },\r\n  {\r\n    _id: \"103\",\r\n    userId: \"3\",\r\n    total: 700000,\r\n    status: \"Cancelled\",\r\n    date: \"2025-04-03\",\r\n  },\r\n];\r\nconst mockTickets = [\r\n  {\r\n    _id: \"201\",\r\n    flightCode: \"VN123\",\r\n    from: \"Hà Nội\",\r\n    to: \"TP.HCM\",\r\n    price: 1500000,\r\n    availableSeats: 50,\r\n  },\r\n  {\r\n    _id: \"202\",\r\n    flightCode: \"VN456\",\r\n    from: \"Đà Nẵng\",\r\n    to: \"Hà Nội\",\r\n    price: 1200000,\r\n    availableSeats: 30,\r\n  },\r\n  {\r\n    _id: \"203\",\r\n    flightCode: \"VN789\",\r\n    from: \"TP.HCM\",\r\n    to: \"Phú Quốc\",\r\n    price: 1000000,\r\n    availableSeats: 20,\r\n  },\r\n];\r\nconst mockPromotions = [\r\n  {\r\n    _id: \"301\",\r\n    code: \"SALE50\",\r\n    description: \"Giảm 50%\",\r\n    discount: 50,\r\n    validUntil: \"2025-05-01\",\r\n  },\r\n  {\r\n    _id: \"302\",\r\n    code: \"SALE30\",\r\n    description: \"Giảm 30%\",\r\n    discount: 30,\r\n    validUntil: \"2025-06-01\",\r\n  },\r\n  {\r\n    _id: \"303\",\r\n    code: \"SALE10\",\r\n    description: \"Giảm 10%\",\r\n    discount: 10,\r\n    validUntil: \"2025-07-01\",\r\n  },\r\n];\r\nconst mockStatistics = {\r\n  totalOrders: 250,\r\n  totalRevenue: 50000000,\r\n  totalTicketsSold: 200,\r\n  totalUsers: 100,\r\n  bestSellingFlight: \"VN123\",\r\n};\r\nconst api = {\r\n  get: async (url) => {\r\n    if (url === \"/statistics\") {\r\n      console.log(\"Trả về mockStatistics:\", mockStatistics);\r\n      return { data: mockStatistics };\r\n    }\r\n    if (url === \"/users\") {\r\n      return { data: mockUsers };\r\n    }\r\n    if (url === \"/orders\") {\r\n      return { data: mockOrders };\r\n    }\r\n    if (url === \"/tickets\") {\r\n      return { data: mockTickets };\r\n    }\r\n    if (url === \"/promotions\") {\r\n      return { data: mockPromotions };\r\n    }\r\n    if (url === \"/statistics\") {\r\n      return { data: mockStatistics };\r\n    }\r\n    return { data: [] };\r\n  },\r\n  post: async (url, newData) => {\r\n    if (url === \"/users\") {\r\n      const createdUser = { ...newData, _id: Date.now().toString() };\r\n      mockUsers.push(createdUser);\r\n      return { data: createdUser };\r\n    }\r\n    if (url === \"/orders\") {\r\n      const createdOrder = { ...newData, _id: Date.now().toString() };\r\n      mockOrders.push(createdOrder);\r\n      return { data: createdOrder };\r\n    }\r\n    if (url === \"/tickets\") {\r\n      const createdTicket = { ...newData, _id: Date.now().toString() };\r\n      mockTickets.push(createdTicket);\r\n      return { data: createdTicket };\r\n    }\r\n    if (url === \"/promotions\") {\r\n      const createdPromotion = { ...newData, _id: Date.now().toString() };\r\n      mockPromotions.push(createdPromotion);\r\n      return { data: createdPromotion };\r\n    }\r\n    return { data: null };\r\n  },\r\n  delete: async (url) => {\r\n    const id = url.split(\"/\").pop();\r\n    if (url.startsWith(\"/users\")) {\r\n      const index = mockUsers.findIndex((user) => user._id === id);\r\n      if (index !== -1) mockUsers.splice(index, 1);\r\n    }\r\n    if (url.startsWith(\"/orders\")) {\r\n      const index = mockOrders.findIndex((order) => order._id === id);\r\n      if (index !== -1) mockOrders.splice(index, 1);\r\n    }\r\n    if (url.startsWith(\"/tickets\")) {\r\n      const index = mockTickets.findIndex((ticket) => ticket._id === id);\r\n      if (index !== -1) mockTickets.splice(index, 1);\r\n    }\r\n    if (url.startsWith(\"/promotions\")) {\r\n      const index = mockPromotions.findIndex(\r\n        (promotion) => promotion._id === id\r\n      );\r\n      if (index !== -1) mockPromotions.splice(index, 1);\r\n    }\r\n    return { data: null };\r\n  },\r\n};\r\n\r\nexport default api;\r\n*/","map":{"version":3,"names":["axios","api","create","baseURL","headers"],"sources":["D:/FlightDealWeb/Front-end/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Cấu hình base URL cho toàn bộ request\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // Đổi lại nếu bạn deploy ở server khác\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n/*\r\nconst mockUsers = [\r\n  { _id: \"1\", name: \"Nguyễn Văn A\", email: \"a@example.com\" },\r\n  { _id: \"2\", name: \"Trần Thị B\", email: \"b@example.com\" },\r\n  { _id: \"3\", name: \"Lê Văn C\", email: \"c@example.com\" },\r\n];\r\nconst mockOrders = [\r\n  {\r\n    _id: \"101\",\r\n    userId: \"1\",\r\n    total: 500000,\r\n    status: \"Completed\",\r\n    date: \"2025-04-01\",\r\n  },\r\n  {\r\n    _id: \"102\",\r\n    userId: \"2\",\r\n    total: 300000,\r\n    status: \"Pending\",\r\n    date: \"2025-04-02\",\r\n  },\r\n  {\r\n    _id: \"103\",\r\n    userId: \"3\",\r\n    total: 700000,\r\n    status: \"Cancelled\",\r\n    date: \"2025-04-03\",\r\n  },\r\n];\r\nconst mockTickets = [\r\n  {\r\n    _id: \"201\",\r\n    flightCode: \"VN123\",\r\n    from: \"Hà Nội\",\r\n    to: \"TP.HCM\",\r\n    price: 1500000,\r\n    availableSeats: 50,\r\n  },\r\n  {\r\n    _id: \"202\",\r\n    flightCode: \"VN456\",\r\n    from: \"Đà Nẵng\",\r\n    to: \"Hà Nội\",\r\n    price: 1200000,\r\n    availableSeats: 30,\r\n  },\r\n  {\r\n    _id: \"203\",\r\n    flightCode: \"VN789\",\r\n    from: \"TP.HCM\",\r\n    to: \"Phú Quốc\",\r\n    price: 1000000,\r\n    availableSeats: 20,\r\n  },\r\n];\r\nconst mockPromotions = [\r\n  {\r\n    _id: \"301\",\r\n    code: \"SALE50\",\r\n    description: \"Giảm 50%\",\r\n    discount: 50,\r\n    validUntil: \"2025-05-01\",\r\n  },\r\n  {\r\n    _id: \"302\",\r\n    code: \"SALE30\",\r\n    description: \"Giảm 30%\",\r\n    discount: 30,\r\n    validUntil: \"2025-06-01\",\r\n  },\r\n  {\r\n    _id: \"303\",\r\n    code: \"SALE10\",\r\n    description: \"Giảm 10%\",\r\n    discount: 10,\r\n    validUntil: \"2025-07-01\",\r\n  },\r\n];\r\nconst mockStatistics = {\r\n  totalOrders: 250,\r\n  totalRevenue: 50000000,\r\n  totalTicketsSold: 200,\r\n  totalUsers: 100,\r\n  bestSellingFlight: \"VN123\",\r\n};\r\nconst api = {\r\n  get: async (url) => {\r\n    if (url === \"/statistics\") {\r\n      console.log(\"Trả về mockStatistics:\", mockStatistics);\r\n      return { data: mockStatistics };\r\n    }\r\n    if (url === \"/users\") {\r\n      return { data: mockUsers };\r\n    }\r\n    if (url === \"/orders\") {\r\n      return { data: mockOrders };\r\n    }\r\n    if (url === \"/tickets\") {\r\n      return { data: mockTickets };\r\n    }\r\n    if (url === \"/promotions\") {\r\n      return { data: mockPromotions };\r\n    }\r\n    if (url === \"/statistics\") {\r\n      return { data: mockStatistics };\r\n    }\r\n    return { data: [] };\r\n  },\r\n  post: async (url, newData) => {\r\n    if (url === \"/users\") {\r\n      const createdUser = { ...newData, _id: Date.now().toString() };\r\n      mockUsers.push(createdUser);\r\n      return { data: createdUser };\r\n    }\r\n    if (url === \"/orders\") {\r\n      const createdOrder = { ...newData, _id: Date.now().toString() };\r\n      mockOrders.push(createdOrder);\r\n      return { data: createdOrder };\r\n    }\r\n    if (url === \"/tickets\") {\r\n      const createdTicket = { ...newData, _id: Date.now().toString() };\r\n      mockTickets.push(createdTicket);\r\n      return { data: createdTicket };\r\n    }\r\n    if (url === \"/promotions\") {\r\n      const createdPromotion = { ...newData, _id: Date.now().toString() };\r\n      mockPromotions.push(createdPromotion);\r\n      return { data: createdPromotion };\r\n    }\r\n    return { data: null };\r\n  },\r\n  delete: async (url) => {\r\n    const id = url.split(\"/\").pop();\r\n    if (url.startsWith(\"/users\")) {\r\n      const index = mockUsers.findIndex((user) => user._id === id);\r\n      if (index !== -1) mockUsers.splice(index, 1);\r\n    }\r\n    if (url.startsWith(\"/orders\")) {\r\n      const index = mockOrders.findIndex((order) => order._id === id);\r\n      if (index !== -1) mockOrders.splice(index, 1);\r\n    }\r\n    if (url.startsWith(\"/tickets\")) {\r\n      const index = mockTickets.findIndex((ticket) => ticket._id === id);\r\n      if (index !== -1) mockTickets.splice(index, 1);\r\n    }\r\n    if (url.startsWith(\"/promotions\")) {\r\n      const index = mockPromotions.findIndex(\r\n        (promotion) => promotion._id === id\r\n      );\r\n      if (index !== -1) mockPromotions.splice(index, 1);\r\n    }\r\n    return { data: null };\r\n  },\r\n};\r\n\r\nexport default api;\r\n*/\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAeH,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}