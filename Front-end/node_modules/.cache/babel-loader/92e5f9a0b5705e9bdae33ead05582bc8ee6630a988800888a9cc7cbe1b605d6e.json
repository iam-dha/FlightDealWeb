{"ast":null,"code":"/*import axios from \"axios\";\r\n\r\n// Cấu hình base URL cho toàn bộ request\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // Đổi lại nếu bạn deploy ở server khác\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n*/const mockUsers=[{_id:\"1\",name:\"Nguyễn Văn A\",email:\"a@example.com\"},{_id:\"2\",name:\"Trần Thị B\",email:\"b@example.com\"},{_id:\"3\",name:\"Lê Văn C\",email:\"c@example.com\"}];const api={get:async url=>{if(url===\"/users\"){return{data:mockUsers};// Trả về dữ liệu giả lập\n}return{data:[]};},post:async(url,newUser)=>{if(url===\"/users\"){const createdUser={...newUser,_id:Date.now().toString()};mockUsers.push(createdUser);return{data:createdUser};}return{data:null};},delete:async url=>{const id=url.split(\"/\").pop();const index=mockUsers.findIndex(user=>user._id===id);if(index!==-1){mockUsers.splice(index,1);}return{data:null};}};export default api;","map":{"version":3,"names":["mockUsers","_id","name","email","api","get","url","data","post","newUser","createdUser","Date","now","toString","push","delete","id","split","pop","index","findIndex","user","splice"],"sources":["D:/FlightDealWeb/Front-end/src/services/api.js"],"sourcesContent":["/*import axios from \"axios\";\r\n\r\n// Cấu hình base URL cho toàn bộ request\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // Đổi lại nếu bạn deploy ở server khác\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n*/\r\n\r\nconst mockUsers = [\r\n  { _id: \"1\", name: \"Nguyễn Văn A\", email: \"a@example.com\" },\r\n  { _id: \"2\", name: \"Trần Thị B\", email: \"b@example.com\" },\r\n  { _id: \"3\", name: \"Lê Văn C\", email: \"c@example.com\" },\r\n];\r\n\r\nconst api = {\r\n  get: async (url) => {\r\n    if (url === \"/users\") {\r\n      return { data: mockUsers }; // Trả về dữ liệu giả lập\r\n    }\r\n    return { data: [] };\r\n  },\r\n  post: async (url, newUser) => {\r\n    if (url === \"/users\") {\r\n      const createdUser = { ...newUser, _id: Date.now().toString() };\r\n      mockUsers.push(createdUser);\r\n      return { data: createdUser };\r\n    }\r\n    return { data: null };\r\n  },\r\n  delete: async (url) => {\r\n    const id = url.split(\"/\").pop();\r\n    const index = mockUsers.findIndex((user) => user._id === id);\r\n    if (index !== -1) {\r\n      mockUsers.splice(index, 1);\r\n    }\r\n    return { data: null };\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,KAAM,CAAAA,SAAS,CAAG,CAChB,CAAEC,GAAG,CAAE,GAAG,CAAEC,IAAI,CAAE,cAAc,CAAEC,KAAK,CAAE,eAAgB,CAAC,CAC1D,CAAEF,GAAG,CAAE,GAAG,CAAEC,IAAI,CAAE,YAAY,CAAEC,KAAK,CAAE,eAAgB,CAAC,CACxD,CAAEF,GAAG,CAAE,GAAG,CAAEC,IAAI,CAAE,UAAU,CAAEC,KAAK,CAAE,eAAgB,CAAC,CACvD,CAED,KAAM,CAAAC,GAAG,CAAG,CACVC,GAAG,CAAE,KAAO,CAAAC,GAAG,EAAK,CAClB,GAAIA,GAAG,GAAK,QAAQ,CAAE,CACpB,MAAO,CAAEC,IAAI,CAAEP,SAAU,CAAC,CAAE;AAC9B,CACA,MAAO,CAAEO,IAAI,CAAE,EAAG,CAAC,CACrB,CAAC,CACDC,IAAI,CAAE,KAAAA,CAAOF,GAAG,CAAEG,OAAO,GAAK,CAC5B,GAAIH,GAAG,GAAK,QAAQ,CAAE,CACpB,KAAM,CAAAI,WAAW,CAAG,CAAE,GAAGD,OAAO,CAAER,GAAG,CAAEU,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAE,CAAC,CAC9Db,SAAS,CAACc,IAAI,CAACJ,WAAW,CAAC,CAC3B,MAAO,CAAEH,IAAI,CAAEG,WAAY,CAAC,CAC9B,CACA,MAAO,CAAEH,IAAI,CAAE,IAAK,CAAC,CACvB,CAAC,CACDQ,MAAM,CAAE,KAAO,CAAAT,GAAG,EAAK,CACrB,KAAM,CAAAU,EAAE,CAAGV,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAC/B,KAAM,CAAAC,KAAK,CAAGnB,SAAS,CAACoB,SAAS,CAAEC,IAAI,EAAKA,IAAI,CAACpB,GAAG,GAAKe,EAAE,CAAC,CAC5D,GAAIG,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBnB,SAAS,CAACsB,MAAM,CAACH,KAAK,CAAE,CAAC,CAAC,CAC5B,CACA,MAAO,CAAEZ,IAAI,CAAE,IAAK,CAAC,CACvB,CACF,CAAC,CAED,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}