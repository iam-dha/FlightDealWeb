{"ast":null,"code":"/*\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"../../services/api.js\";\r\nimport \"../../styles/PromotionManagement.css\";\r\n\r\nconst PromotionManagement = () => {\r\n  const [promotions, setPromotions] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    id: \"\",\r\n    code: \"\",\r\n    description: \"\",\r\n    discount: \"\",\r\n    validity: \"\",\r\n    conditions: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPromotions();\r\n  }, []);\r\n\r\n  const fetchPromotions = async () => {\r\n    const res = await api.get(\"/promotions\");\r\n    setPromotions(res.data);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await api.delete(`/promotions/${id}`);\r\n    setPromotions(promotions.filter((p) => p._id !== id));\r\n  };\r\n\r\n  const handleEdit = (promo) => {\r\n    setFormData(promo); // Đổ dữ liệu của khuyến mãi cần sửa vào form\r\n    setIsEditMode(true); // Bật chế độ sửa\r\n    setIsModalOpen(true); // Mở modal\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAddPromotion = async (e) => {\r\n    e.preventDefault();\r\n    await api.post(\"/promotions\", formData);\r\n    setFormData({\r\n      id: \"\",\r\n      code: \"\",\r\n      description: \"\",\r\n      discount: \"\",\r\n      validity: \"\",\r\n      conditions: \"\",\r\n    });\r\n    setIsModalOpen(false);\r\n    fetchPromotions();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Quản lý Khuyến mãi</h2>\r\n      <button className=\"add-btn\" onClick={() => setIsModalOpen(true)}>\r\n        Thêm khuyến mãi\r\n      </button>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Mã code</th>\r\n            <th>Mô tả</th>\r\n            <th>Giảm giá</th>\r\n            <th>Thời gian hiệu lực</th>\r\n            <th>Điều kiện áp dụng</th>\r\n            <th>Hành động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {promotions.map((promo) => (\r\n            <tr key={promo._id}>\r\n              <td>{promo.id}</td>\r\n              <td>{promo.code}</td>\r\n              <td>{promo.description}</td>\r\n              <td>{promo.discount}%</td>\r\n              <td>{new Date(promo.validity).toLocaleDateString()}</td>\r\n              <td>{promo.conditions}</td>\r\n              <td>\r\n                <button\r\n                  className=\"action-btn\"\r\n                  onClick={() => handleDelete(promo._id)}\r\n                >\r\n                  Xoá\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Modal thêm khuyến mãi */\n/* {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button\r\n              className=\"modal-close\"\r\n              onClick={() => setIsModalOpen(false)}\r\n            >\r\n              ×\r\n            </button>\r\n            <h3>Thêm khuyến mãi</h3>\r\n            <form onSubmit={handleAddPromotion}>\r\n              <label>ID mã khuyến mãi:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={formData.id}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n\r\n              <label>Mã code:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"code\"\r\n                value={formData.code}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n\r\n              <label>Mô tả:</label>\r\n              <textarea\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                required\r\n              ></textarea>\r\n\r\n              <label>Phần trăm/giá trị giảm giá:</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"discount\"\r\n                value={formData.discount}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n\r\n              <label>Thời gian hiệu lực:</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"validity\"\r\n                value={formData.validity}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n\r\n              <label>Điều kiện áp dụng:</label>\r\n              <textarea\r\n                name=\"conditions\"\r\n                value={formData.conditions}\r\n                onChange={handleInputChange}\r\n                required\r\n              ></textarea>\r\n\r\n              <button type=\"submit\" className=\"submit-btn\">\r\n                Thêm\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PromotionManagement;\r\n*/","map":{"version":3,"names":[],"sources":["D:/FlightDealWeb/Front-end/src/components/admin/PromotionManagement.jsx"],"sourcesContent":["/*\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"../../services/api.js\";\r\nimport \"../../styles/PromotionManagement.css\";\r\n\r\nconst PromotionManagement = () => {\r\n  const [promotions, setPromotions] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    id: \"\",\r\n    code: \"\",\r\n    description: \"\",\r\n    discount: \"\",\r\n    validity: \"\",\r\n    conditions: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPromotions();\r\n  }, []);\r\n\r\n  const fetchPromotions = async () => {\r\n    const res = await api.get(\"/promotions\");\r\n    setPromotions(res.data);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await api.delete(`/promotions/${id}`);\r\n    setPromotions(promotions.filter((p) => p._id !== id));\r\n  };\r\n\r\n  const handleEdit = (promo) => {\r\n    setFormData(promo); // Đổ dữ liệu của khuyến mãi cần sửa vào form\r\n    setIsEditMode(true); // Bật chế độ sửa\r\n    setIsModalOpen(true); // Mở modal\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAddPromotion = async (e) => {\r\n    e.preventDefault();\r\n    await api.post(\"/promotions\", formData);\r\n    setFormData({\r\n      id: \"\",\r\n      code: \"\",\r\n      description: \"\",\r\n      discount: \"\",\r\n      validity: \"\",\r\n      conditions: \"\",\r\n    });\r\n    setIsModalOpen(false);\r\n    fetchPromotions();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Quản lý Khuyến mãi</h2>\r\n      <button className=\"add-btn\" onClick={() => setIsModalOpen(true)}>\r\n        Thêm khuyến mãi\r\n      </button>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Mã code</th>\r\n            <th>Mô tả</th>\r\n            <th>Giảm giá</th>\r\n            <th>Thời gian hiệu lực</th>\r\n            <th>Điều kiện áp dụng</th>\r\n            <th>Hành động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {promotions.map((promo) => (\r\n            <tr key={promo._id}>\r\n              <td>{promo.id}</td>\r\n              <td>{promo.code}</td>\r\n              <td>{promo.description}</td>\r\n              <td>{promo.discount}%</td>\r\n              <td>{new Date(promo.validity).toLocaleDateString()}</td>\r\n              <td>{promo.conditions}</td>\r\n              <td>\r\n                <button\r\n                  className=\"action-btn\"\r\n                  onClick={() => handleDelete(promo._id)}\r\n                >\r\n                  Xoá\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Modal thêm khuyến mãi */\r\n/* {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button\r\n              className=\"modal-close\"\r\n              onClick={() => setIsModalOpen(false)}\r\n            >\r\n              ×\r\n            </button>\r\n            <h3>Thêm khuyến mãi</h3>\r\n            <form onSubmit={handleAddPromotion}>\r\n              <label>ID mã khuyến mãi:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={formData.id}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n\r\n              <label>Mã code:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"code\"\r\n                value={formData.code}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n\r\n              <label>Mô tả:</label>\r\n              <textarea\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                required\r\n              ></textarea>\r\n\r\n              <label>Phần trăm/giá trị giảm giá:</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"discount\"\r\n                value={formData.discount}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n\r\n              <label>Thời gian hiệu lực:</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"validity\"\r\n                value={formData.validity}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n\r\n              <label>Điều kiện áp dụng:</label>\r\n              <textarea\r\n                name=\"conditions\"\r\n                value={formData.conditions}\r\n                onChange={handleInputChange}\r\n                required\r\n              ></textarea>\r\n\r\n              <button type=\"submit\" className=\"submit-btn\">\r\n                Thêm\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PromotionManagement;\r\n*/\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}